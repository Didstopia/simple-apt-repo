name: Test

# Only allow this workflow to run once per workflow and event type/number.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}

# FIXME: Tests should additionally run _after_ publishing, to verify that the published
#        newly created container image still works as expected!

# Run this workflow every time a new commit pushed to any branch in your repository.
on:
  push:
    # branches:
    #   - master
  # Allow triggering manually.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      ## TODO: Build the container image here, but don't publish it,
      ##       then specify a tag that we will use for this specific
      ##       test run, and make it unique, then use it for "image-version".

      - name: Run Custom Action
        uses: ./
        with:
          ## FIXME: It looks like GH Actions doesn't apply defaults,
          ##        so if we don't set these, the env vars will be empty?!
          # repo-relative: true
          # image-version: master
          timezone: Europe/Helsinki
          repo-origin: Test Origin
          repo-label: Test Label
          repo-version: 0.1.2
          repo-description: Test Description

      - name: Verify Results
        run: |
          echo "Verifying the generated apt repository structure"
          echo "- Checking if repo path exists and is not empty: ${GITHUB_WORKSPACE}/repo"
          if [ ! -d "${GITHUB_WORKSPACE}/repo" ]; then
            echo "The apt repository was not created under GitHub Workspace path."
            ls -lah "${GITHUB_WORKSPACE}"
            exit 1
          fi
          echo "- Checking if packages path exists and is not empty: ${GITHUB_WORKSPACE}/packages"
          if [ ! -d "${GITHUB_WORKSPACE}/packages" ]; then
            echo "The apt repository was not created under GitHub Workspace path."
            ls -lah "${GITHUB_WORKSPACE}"
            exit 1
          fi
          echo "- Checking if keys path exists and is not empty: ${GITHUB_WORKSPACE}/keys"
          if [ ! -d "${GITHUB_WORKSPACE}/keys" ]; then
            echo "The apt repository was not created under GitHub Workspace path."
            ls -lah "${GITHUB_WORKSPACE}"
            exit 1
          fi
          ## TODO: Implement more tests here, to actually test for the
          ##       expected contents of the apt repository, like dists, pool etc.
          echo
          echo "Checks passed, terminating ..."
          exit 0
